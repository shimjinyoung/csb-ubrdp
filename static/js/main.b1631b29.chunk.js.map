{"version":3,"sources":["App/App.module.css","store/reducer.js","store/actions.js","store/store.js","components/TodoInput.js","components/TodoList.js","App/App.js","index.js"],"names":["module","exports","container","reducer","state","action","type","payload","todos","concat","Object","toConsumableArray","filter","todo","id","init","Store","createContext","initState","doit","StoreProvider","_ref","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","value","initDoit","InputTodo","useContext","_useState","useState","_useState2","setTodo","_useState3","_useState4","error","setError","react","Form","style","marginTop","Grid","columns","Column","Field","htmlFor","placeholder","onChange","e","cuid","target","marginLeft","verticalAlign","Button","primary","position","top","onClick","trim","length","window","setTimeout","addTodo","Message","role","aria-live","header","content","TodoList","_useContext","Header","as","size","Menu","vertical","fluid","paddingLeft","map","item","Item","key","Checkbox","toggle","label","fontSize","App","className","styles","TodoInput","Divider","section","horizontal","aria-hidden","components_TodoList","rootElement","document","getElementById","render","store_StoreProvider","App_App"],"mappings":"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","file":"static/js/main.b1631b29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container___P6pN\"};","import { ADD_TODO, DONE_TODO, RESET_TODO } from \"./actions\";\nimport { init } from \"./store\";\n\n// 리듀서(Reducer) 함수\nexport const reducer = (state, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    // 할 일 추가\n    case ADD_TODO:\n      return {\n        todos: [...state.todos, payload]\n      };\n    // 할 일 완료\n    case DONE_TODO:\n      return {\n        todos: state.todos.filter((todo) => todo.id !== payload)\n      };\n    // 할 일 초기화\n    case RESET_TODO:\n      return init();\n    // 기본 상태 반환\n    default:\n      return state;\n  }\n};\n","// 액션 상수(Action Constants)\nexport const ADD_TODO = \"할 일 추가\";\nexport const DONE_TODO = \"할 일 완료 처리\";\nexport const RESET_TODO = \"할 일 목록 초기화\";\n\n// 액션 생성자(Action Creater) 함수\nexport const addTodo = (todo) => ({\n  type: ADD_TODO,\n  payload: todo\n});\n\nexport const doneTodo = (id) => ({\n  type: DONE_TODO,\n  payload: id\n});\n\nexport const resetTodo = () => ({\n  type: RESET_TODO\n});\n","import React, { createContext, useReducer } from \"react\";\nimport { reducer } from \"./reducer\";\n\n// 스토어\nexport const Store = createContext();\n\n// 초기 상태(Initial State)\nexport const initState = {\n  todos: [\n    {\n      id: \"ck9483y6a000z3h63ex5f5qnl\",\n      doit: \"React 상태 관리\"\n    },\n    {\n      id: \"ck9484xbm00063h68cpnevol6\",\n      doit: \"Redux 학습\"\n    }\n  ]\n};\n\n// 상태 초기화 함수\nexport const init = () => initState;\n\n// 스토어 프로바이더 래퍼 컴포넌트\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initState, init);\n  return (\n    <Store.Provider\n      value={{\n        state,\n        dispatch\n      }}\n    >\n      {children}\n    </Store.Provider>\n  );\n};\n","import React, { useContext, useState, Fragment } from \"react\";\nimport { Form, Grid, Button, Message } from \"semantic-ui-react\";\n\n// 고유 ID 생성 함수 호출\nimport cuid from \"cuid\";\n\n// Store 컨텍스트 호출\nimport { Store, addTodo } from \"../store\";\n\n// 초기 할 일\nconst initDoit = {\n  doit: \"\"\n};\n\n// InputTodo 컴포넌트\nconst InputTodo = () => {\n  // Store 상태 관리를 위한 state, dispatch 추출\n  const { dispatch } = useContext(Store);\n\n  // 인풋 컨트롤 상태 관리\n  const [todo, setTodo] = useState(initDoit);\n\n  // 오류 상태 관리\n  const [error, setError] = useState(false);\n\n  // 렌더링\n  return (\n    <Fragment>\n      <Form style={{ marginTop: 30 }}>\n        <Grid columns=\"2\">\n          <Grid.Column>\n            <Form.Field>\n              <label htmlFor=\"todoInput\">오늘 해야 할 일은?</label>\n              <input\n                type=\"text\"\n                id=\"todoInput\"\n                placeholder=\"오늘 할 일을 작성하세요.\"\n                value={todo.doit}\n                onChange={(e) => {\n                  // todo 상태 업데이트 (고유 ID 생성 설정)\n                  setTodo({\n                    id: cuid(),\n                    doit: e.target.value\n                  });\n                }}\n              />\n            </Form.Field>\n          </Grid.Column>\n          <Grid.Column style={{ marginLeft: -20 }} verticalAlign=\"bottom\">\n            <Button\n              primary\n              id=\"submit_button\"\n              style={{ position: \"relative\", top: -2 }}\n              onClick={() => {\n                if (!todo.id || todo.doit.trim().length === 0) {\n                  setError(true);\n                  setTodo(initDoit);\n                  window.setTimeout(() => setError(false), 3000);\n                  return;\n                }\n                // Store에 디스패치 요청\n                // ⬇\n                // 액션 생성자가 반환한 액션 값을 리듀서가 처리\n                // ⬇\n                // 컴포넌트 업데이트\n                dispatch(addTodo(todo));\n                // todo 상태 초기화\n                setTodo(initDoit);\n              }}\n            >\n              추가\n            </Button>\n          </Grid.Column>\n        </Grid>\n      </Form>\n      {error && (\n        <Message\n          role=\"alert\"\n          aria-live=\"assertive\"\n          error\n          header=\"오늘 할 일이 제대로 작성되지 않았습니다.\"\n          content=\"입력하지 않았거나, 빈 공백으로 입력되었는지 확인한 후 다시 시도하세요.\"\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default InputTodo;\n","import React, { Fragment, useContext } from \"react\";\nimport { Header, Menu, Checkbox } from \"semantic-ui-react\";\n\n// Store 컨텍스트 호출\nimport { Store, doneTodo } from \"../store\";\n\n// TodoList 컴포넌트\nconst TodoList = () => {\n  // Store 상태 관리를 위한 state, dispatch 추출\n  const { state, dispatch } = useContext(Store);\n\n  // 렌더링\n  return (\n    <Fragment>\n      <Header as=\"h2\" size=\"medium\">\n        오늘 할 일{\" \"}\n      </Header>\n\n      <Menu as=\"ul\" vertical fluid style={{ paddingLeft: 0 }}>\n        {/* todos 상태 개수 조건 처리 */}\n        {state.todos.length > 0 ? (\n          // todos 상태 데이터의 개수가 0 이상일 경우\n          state.todos.map((item) => (\n            <Menu.Item as=\"li\" key={item.id}>\n              <Checkbox\n                toggle\n                label={item.doit}\n                onClick={(e) => {\n                  // Store에 디스패치 요청\n                  // ⬇\n                  // 액션 생성자가 반환한 액션 값을 리듀서가 처리\n                  // ⬇\n                  // 컴포넌트 업데이트\n                  dispatch(doneTodo(item.id));\n                }}\n              />\n            </Menu.Item>\n          ))\n        ) : (\n          // todos 상태 데이터의 개수가 0인 경우\n          <Menu.Item as=\"li\" style={{ fontSize: 16 }}>\n            할 일이 없습니다.\n          </Menu.Item>\n        )}\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default TodoList;\n","import \"semantic-ui-css/semantic.min.css\";\nimport styles from \"./App.module.css\";\n\nimport React from \"react\";\nimport { Header, Divider } from \"semantic-ui-react\";\n\nimport TodoInput from \"../components/TodoInput\";\nimport TodoList from \"../components/TodoList\";\n\nfunction App() {\n  return (\n    <div className={styles.container}>\n      <Header as=\"h1\">Todo App</Header>\n      <TodoInput />\n      <Divider section horizontal>\n        <span aria-hidden=\"true\">⬇</span>\n      </Divider>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\n// 스토어 공급자 호출\nimport { StoreProvider } from \"./store\";\n\n// 가상 DOM 컴포넌트 트리\nimport App from \"./App/App\";\n\n// 실제 DOM 요소\nconst rootElement = document.getElementById(\"root\");\n\n// 웹 브라우저 렌더링\nrender(\n  // 스토어 공급자로 App 래핑\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  rootElement\n);\n"],"sourceRoot":""}